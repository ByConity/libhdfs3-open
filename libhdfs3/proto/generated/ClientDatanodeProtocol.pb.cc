// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientDatanodeProtocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientDatanodeProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Hdfs {
namespace Internal {

namespace {

const ::google::protobuf::Descriptor* GetReplicaVisibleLengthRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetReplicaVisibleLengthRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetReplicaVisibleLengthResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetReplicaVisibleLengthResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshNamenodesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshNamenodesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshNamenodesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshNamenodesResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteBlockPoolRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteBlockPoolRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteBlockPoolResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteBlockPoolResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBlockLocalPathInfoRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBlockLocalPathInfoRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBlockLocalPathInfoResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBlockLocalPathInfoResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHdfsBlockLocationsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHdfsBlockLocationsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHdfsBlockLocationsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHdfsBlockLocationsResponseProto_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* ClientDatanodeProtocolService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto() {
  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientDatanodeProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  GetReplicaVisibleLengthRequestProto_descriptor_ = file->message_type(0);
  static const int GetReplicaVisibleLengthRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthRequestProto, block_),
  };
  GetReplicaVisibleLengthRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetReplicaVisibleLengthRequestProto_descriptor_,
      GetReplicaVisibleLengthRequestProto::default_instance_,
      GetReplicaVisibleLengthRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetReplicaVisibleLengthRequestProto));
  GetReplicaVisibleLengthResponseProto_descriptor_ = file->message_type(1);
  static const int GetReplicaVisibleLengthResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthResponseProto, length_),
  };
  GetReplicaVisibleLengthResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetReplicaVisibleLengthResponseProto_descriptor_,
      GetReplicaVisibleLengthResponseProto::default_instance_,
      GetReplicaVisibleLengthResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaVisibleLengthResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetReplicaVisibleLengthResponseProto));
  RefreshNamenodesRequestProto_descriptor_ = file->message_type(2);
  static const int RefreshNamenodesRequestProto_offsets_[1] = {
  };
  RefreshNamenodesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshNamenodesRequestProto_descriptor_,
      RefreshNamenodesRequestProto::default_instance_,
      RefreshNamenodesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshNamenodesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshNamenodesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshNamenodesRequestProto));
  RefreshNamenodesResponseProto_descriptor_ = file->message_type(3);
  static const int RefreshNamenodesResponseProto_offsets_[1] = {
  };
  RefreshNamenodesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshNamenodesResponseProto_descriptor_,
      RefreshNamenodesResponseProto::default_instance_,
      RefreshNamenodesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshNamenodesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshNamenodesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshNamenodesResponseProto));
  DeleteBlockPoolRequestProto_descriptor_ = file->message_type(4);
  static const int DeleteBlockPoolRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolRequestProto, blockpool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolRequestProto, force_),
  };
  DeleteBlockPoolRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteBlockPoolRequestProto_descriptor_,
      DeleteBlockPoolRequestProto::default_instance_,
      DeleteBlockPoolRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteBlockPoolRequestProto));
  DeleteBlockPoolResponseProto_descriptor_ = file->message_type(5);
  static const int DeleteBlockPoolResponseProto_offsets_[1] = {
  };
  DeleteBlockPoolResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteBlockPoolResponseProto_descriptor_,
      DeleteBlockPoolResponseProto::default_instance_,
      DeleteBlockPoolResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBlockPoolResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteBlockPoolResponseProto));
  GetBlockLocalPathInfoRequestProto_descriptor_ = file->message_type(6);
  static const int GetBlockLocalPathInfoRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoRequestProto, block_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoRequestProto, token_),
  };
  GetBlockLocalPathInfoRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBlockLocalPathInfoRequestProto_descriptor_,
      GetBlockLocalPathInfoRequestProto::default_instance_,
      GetBlockLocalPathInfoRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBlockLocalPathInfoRequestProto));
  GetBlockLocalPathInfoResponseProto_descriptor_ = file->message_type(7);
  static const int GetBlockLocalPathInfoResponseProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoResponseProto, block_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoResponseProto, localpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoResponseProto, localmetapath_),
  };
  GetBlockLocalPathInfoResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetBlockLocalPathInfoResponseProto_descriptor_,
      GetBlockLocalPathInfoResponseProto::default_instance_,
      GetBlockLocalPathInfoResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocalPathInfoResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetBlockLocalPathInfoResponseProto));
  GetHdfsBlockLocationsRequestProto_descriptor_ = file->message_type(8);
  static const int GetHdfsBlockLocationsRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsRequestProto, blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsRequestProto, tokens_),
  };
  GetHdfsBlockLocationsRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHdfsBlockLocationsRequestProto_descriptor_,
      GetHdfsBlockLocationsRequestProto::default_instance_,
      GetHdfsBlockLocationsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHdfsBlockLocationsRequestProto));
  GetHdfsBlockLocationsResponseProto_descriptor_ = file->message_type(9);
  static const int GetHdfsBlockLocationsResponseProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsResponseProto, volumeids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsResponseProto, volumeindexes_),
  };
  GetHdfsBlockLocationsResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHdfsBlockLocationsResponseProto_descriptor_,
      GetHdfsBlockLocationsResponseProto::default_instance_,
      GetHdfsBlockLocationsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHdfsBlockLocationsResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHdfsBlockLocationsResponseProto));
  ClientDatanodeProtocolService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientDatanodeProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetReplicaVisibleLengthRequestProto_descriptor_, &GetReplicaVisibleLengthRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetReplicaVisibleLengthResponseProto_descriptor_, &GetReplicaVisibleLengthResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshNamenodesRequestProto_descriptor_, &RefreshNamenodesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshNamenodesResponseProto_descriptor_, &RefreshNamenodesResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteBlockPoolRequestProto_descriptor_, &DeleteBlockPoolRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteBlockPoolResponseProto_descriptor_, &DeleteBlockPoolResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBlockLocalPathInfoRequestProto_descriptor_, &GetBlockLocalPathInfoRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetBlockLocalPathInfoResponseProto_descriptor_, &GetBlockLocalPathInfoResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHdfsBlockLocationsRequestProto_descriptor_, &GetHdfsBlockLocationsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHdfsBlockLocationsResponseProto_descriptor_, &GetHdfsBlockLocationsResponseProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto() {
  delete GetReplicaVisibleLengthRequestProto::default_instance_;
  delete GetReplicaVisibleLengthRequestProto_reflection_;
  delete GetReplicaVisibleLengthResponseProto::default_instance_;
  delete GetReplicaVisibleLengthResponseProto_reflection_;
  delete RefreshNamenodesRequestProto::default_instance_;
  delete RefreshNamenodesRequestProto_reflection_;
  delete RefreshNamenodesResponseProto::default_instance_;
  delete RefreshNamenodesResponseProto_reflection_;
  delete DeleteBlockPoolRequestProto::default_instance_;
  delete DeleteBlockPoolRequestProto_reflection_;
  delete DeleteBlockPoolResponseProto::default_instance_;
  delete DeleteBlockPoolResponseProto_reflection_;
  delete GetBlockLocalPathInfoRequestProto::default_instance_;
  delete GetBlockLocalPathInfoRequestProto_reflection_;
  delete GetBlockLocalPathInfoResponseProto::default_instance_;
  delete GetBlockLocalPathInfoResponseProto_reflection_;
  delete GetHdfsBlockLocationsRequestProto::default_instance_;
  delete GetHdfsBlockLocationsRequestProto_reflection_;
  delete GetHdfsBlockLocationsResponseProto::default_instance_;
  delete GetHdfsBlockLocationsResponseProto_reflection_;
}

void protobuf_AddDesc_ClientDatanodeProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Hdfs::Internal::protobuf_AddDesc_hdfs_2eproto();
  ::Hdfs::Internal::protobuf_AddDesc_Security_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034ClientDatanodeProtocol.proto\022\rHdfs.Int"
    "ernal\032\nhdfs.proto\032\016Security.proto\"W\n#Get"
    "ReplicaVisibleLengthRequestProto\0220\n\005bloc"
    "k\030\001 \002(\0132!.Hdfs.Internal.ExtendedBlockPro"
    "to\"6\n$GetReplicaVisibleLengthResponsePro"
    "to\022\016\n\006length\030\001 \002(\004\"\036\n\034RefreshNamenodesRe"
    "questProto\"\037\n\035RefreshNamenodesResponsePr"
    "oto\"\?\n\033DeleteBlockPoolRequestProto\022\021\n\tbl"
    "ockPool\030\001 \002(\t\022\r\n\005force\030\002 \002(\010\"\036\n\034DeleteBl"
    "ockPoolResponseProto\"\177\n!GetBlockLocalPat"
    "hInfoRequestProto\0220\n\005block\030\001 \002(\0132!.Hdfs."
    "Internal.ExtendedBlockProto\022(\n\005token\030\002 \002"
    "(\0132\031.Hdfs.Internal.TokenProto\"\200\001\n\"GetBlo"
    "ckLocalPathInfoResponseProto\0220\n\005block\030\001 "
    "\002(\0132!.Hdfs.Internal.ExtendedBlockProto\022\021"
    "\n\tlocalPath\030\002 \002(\t\022\025\n\rlocalMetaPath\030\003 \002(\t"
    "\"\201\001\n!GetHdfsBlockLocationsRequestProto\0221"
    "\n\006blocks\030\001 \003(\0132!.Hdfs.Internal.ExtendedB"
    "lockProto\022)\n\006tokens\030\002 \003(\0132\031.Hdfs.Interna"
    "l.TokenProto\"N\n\"GetHdfsBlockLocationsRes"
    "ponseProto\022\021\n\tvolumeIds\030\001 \003(\014\022\025\n\rvolumeI"
    "ndexes\030\002 \003(\r2\373\004\n\035ClientDatanodeProtocolS"
    "ervice\022\202\001\n\027getReplicaVisibleLength\0222.Hdf"
    "s.Internal.GetReplicaVisibleLengthReques"
    "tProto\0323.Hdfs.Internal.GetReplicaVisible"
    "LengthResponseProto\022m\n\020refreshNamenodes\022"
    "+.Hdfs.Internal.RefreshNamenodesRequestP"
    "roto\032,.Hdfs.Internal.RefreshNamenodesRes"
    "ponseProto\022j\n\017deleteBlockPool\022*.Hdfs.Int"
    "ernal.DeleteBlockPoolRequestProto\032+.Hdfs"
    ".Internal.DeleteBlockPoolResponseProto\022|"
    "\n\025getBlockLocalPathInfo\0220.Hdfs.Internal."
    "GetBlockLocalPathInfoRequestProto\0321.Hdfs"
    ".Internal.GetBlockLocalPathInfoResponseP"
    "roto\022|\n\025getHdfsBlockLocations\0220.Hdfs.Int"
    "ernal.GetHdfsBlockLocationsRequestProto\032"
    "1.Hdfs.Internal.GetHdfsBlockLocationsRes"
    "ponseProtoBN\n%org.apache.hadoop.hdfs.pro"
    "tocol.protoB\034ClientDatanodeProtocolProto"
    "s\200\001\001\210\001\001\240\001\001", 1570);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientDatanodeProtocol.proto", &protobuf_RegisterTypes);
  GetReplicaVisibleLengthRequestProto::default_instance_ = new GetReplicaVisibleLengthRequestProto();
  GetReplicaVisibleLengthResponseProto::default_instance_ = new GetReplicaVisibleLengthResponseProto();
  RefreshNamenodesRequestProto::default_instance_ = new RefreshNamenodesRequestProto();
  RefreshNamenodesResponseProto::default_instance_ = new RefreshNamenodesResponseProto();
  DeleteBlockPoolRequestProto::default_instance_ = new DeleteBlockPoolRequestProto();
  DeleteBlockPoolResponseProto::default_instance_ = new DeleteBlockPoolResponseProto();
  GetBlockLocalPathInfoRequestProto::default_instance_ = new GetBlockLocalPathInfoRequestProto();
  GetBlockLocalPathInfoResponseProto::default_instance_ = new GetBlockLocalPathInfoResponseProto();
  GetHdfsBlockLocationsRequestProto::default_instance_ = new GetHdfsBlockLocationsRequestProto();
  GetHdfsBlockLocationsResponseProto::default_instance_ = new GetHdfsBlockLocationsResponseProto();
  GetReplicaVisibleLengthRequestProto::default_instance_->InitAsDefaultInstance();
  GetReplicaVisibleLengthResponseProto::default_instance_->InitAsDefaultInstance();
  RefreshNamenodesRequestProto::default_instance_->InitAsDefaultInstance();
  RefreshNamenodesResponseProto::default_instance_->InitAsDefaultInstance();
  DeleteBlockPoolRequestProto::default_instance_->InitAsDefaultInstance();
  DeleteBlockPoolResponseProto::default_instance_->InitAsDefaultInstance();
  GetBlockLocalPathInfoRequestProto::default_instance_->InitAsDefaultInstance();
  GetBlockLocalPathInfoResponseProto::default_instance_->InitAsDefaultInstance();
  GetHdfsBlockLocationsRequestProto::default_instance_->InitAsDefaultInstance();
  GetHdfsBlockLocationsResponseProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientDatanodeProtocol_2eproto {
  StaticDescriptorInitializer_ClientDatanodeProtocol_2eproto() {
    protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  }
} static_descriptor_initializer_ClientDatanodeProtocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GetReplicaVisibleLengthRequestProto::kBlockFieldNumber;
#endif  // !_MSC_VER

GetReplicaVisibleLengthRequestProto::GetReplicaVisibleLengthRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetReplicaVisibleLengthRequestProto::InitAsDefaultInstance() {
  block_ = const_cast< ::Hdfs::Internal::ExtendedBlockProto*>(&::Hdfs::Internal::ExtendedBlockProto::default_instance());
}

GetReplicaVisibleLengthRequestProto::GetReplicaVisibleLengthRequestProto(const GetReplicaVisibleLengthRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetReplicaVisibleLengthRequestProto::SharedCtor() {
  _cached_size_ = 0;
  block_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetReplicaVisibleLengthRequestProto::~GetReplicaVisibleLengthRequestProto() {
  SharedDtor();
}

void GetReplicaVisibleLengthRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete block_;
  }
}

void GetReplicaVisibleLengthRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetReplicaVisibleLengthRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetReplicaVisibleLengthRequestProto_descriptor_;
}

const GetReplicaVisibleLengthRequestProto& GetReplicaVisibleLengthRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetReplicaVisibleLengthRequestProto* GetReplicaVisibleLengthRequestProto::default_instance_ = NULL;

GetReplicaVisibleLengthRequestProto* GetReplicaVisibleLengthRequestProto::New() const {
  return new GetReplicaVisibleLengthRequestProto;
}

void GetReplicaVisibleLengthRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_block()) {
      if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetReplicaVisibleLengthRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Hdfs.Internal.ExtendedBlockProto block = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetReplicaVisibleLengthRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetReplicaVisibleLengthRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->block(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetReplicaVisibleLengthRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Hdfs.Internal.ExtendedBlockProto block = 1;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetReplicaVisibleLengthRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetReplicaVisibleLengthRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetReplicaVisibleLengthRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetReplicaVisibleLengthRequestProto::MergeFrom(const GetReplicaVisibleLengthRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block()) {
      mutable_block()->::Hdfs::Internal::ExtendedBlockProto::MergeFrom(from.block());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetReplicaVisibleLengthRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReplicaVisibleLengthRequestProto::CopyFrom(const GetReplicaVisibleLengthRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReplicaVisibleLengthRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_block()) {
    if (!this->block().IsInitialized()) return false;
  }
  return true;
}

void GetReplicaVisibleLengthRequestProto::Swap(GetReplicaVisibleLengthRequestProto* other) {
  if (other != this) {
    std::swap(block_, other->block_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetReplicaVisibleLengthRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetReplicaVisibleLengthRequestProto_descriptor_;
  metadata.reflection = GetReplicaVisibleLengthRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetReplicaVisibleLengthResponseProto::kLengthFieldNumber;
#endif  // !_MSC_VER

GetReplicaVisibleLengthResponseProto::GetReplicaVisibleLengthResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetReplicaVisibleLengthResponseProto::InitAsDefaultInstance() {
}

GetReplicaVisibleLengthResponseProto::GetReplicaVisibleLengthResponseProto(const GetReplicaVisibleLengthResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetReplicaVisibleLengthResponseProto::SharedCtor() {
  _cached_size_ = 0;
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetReplicaVisibleLengthResponseProto::~GetReplicaVisibleLengthResponseProto() {
  SharedDtor();
}

void GetReplicaVisibleLengthResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetReplicaVisibleLengthResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetReplicaVisibleLengthResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetReplicaVisibleLengthResponseProto_descriptor_;
}

const GetReplicaVisibleLengthResponseProto& GetReplicaVisibleLengthResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetReplicaVisibleLengthResponseProto* GetReplicaVisibleLengthResponseProto::default_instance_ = NULL;

GetReplicaVisibleLengthResponseProto* GetReplicaVisibleLengthResponseProto::New() const {
  return new GetReplicaVisibleLengthResponseProto;
}

void GetReplicaVisibleLengthResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    length_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetReplicaVisibleLengthResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 length = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetReplicaVisibleLengthResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 length = 1;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->length(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetReplicaVisibleLengthResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 length = 1;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->length(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetReplicaVisibleLengthResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 length = 1;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetReplicaVisibleLengthResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetReplicaVisibleLengthResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetReplicaVisibleLengthResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetReplicaVisibleLengthResponseProto::MergeFrom(const GetReplicaVisibleLengthResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetReplicaVisibleLengthResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReplicaVisibleLengthResponseProto::CopyFrom(const GetReplicaVisibleLengthResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReplicaVisibleLengthResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetReplicaVisibleLengthResponseProto::Swap(GetReplicaVisibleLengthResponseProto* other) {
  if (other != this) {
    std::swap(length_, other->length_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetReplicaVisibleLengthResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetReplicaVisibleLengthResponseProto_descriptor_;
  metadata.reflection = GetReplicaVisibleLengthResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RefreshNamenodesRequestProto::RefreshNamenodesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefreshNamenodesRequestProto::InitAsDefaultInstance() {
}

RefreshNamenodesRequestProto::RefreshNamenodesRequestProto(const RefreshNamenodesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefreshNamenodesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshNamenodesRequestProto::~RefreshNamenodesRequestProto() {
  SharedDtor();
}

void RefreshNamenodesRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshNamenodesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshNamenodesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshNamenodesRequestProto_descriptor_;
}

const RefreshNamenodesRequestProto& RefreshNamenodesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

RefreshNamenodesRequestProto* RefreshNamenodesRequestProto::default_instance_ = NULL;

RefreshNamenodesRequestProto* RefreshNamenodesRequestProto::New() const {
  return new RefreshNamenodesRequestProto;
}

void RefreshNamenodesRequestProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshNamenodesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void RefreshNamenodesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefreshNamenodesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefreshNamenodesRequestProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshNamenodesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshNamenodesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshNamenodesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshNamenodesRequestProto::MergeFrom(const RefreshNamenodesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshNamenodesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshNamenodesRequestProto::CopyFrom(const RefreshNamenodesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshNamenodesRequestProto::IsInitialized() const {

  return true;
}

void RefreshNamenodesRequestProto::Swap(RefreshNamenodesRequestProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshNamenodesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshNamenodesRequestProto_descriptor_;
  metadata.reflection = RefreshNamenodesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RefreshNamenodesResponseProto::RefreshNamenodesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefreshNamenodesResponseProto::InitAsDefaultInstance() {
}

RefreshNamenodesResponseProto::RefreshNamenodesResponseProto(const RefreshNamenodesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefreshNamenodesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshNamenodesResponseProto::~RefreshNamenodesResponseProto() {
  SharedDtor();
}

void RefreshNamenodesResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshNamenodesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshNamenodesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshNamenodesResponseProto_descriptor_;
}

const RefreshNamenodesResponseProto& RefreshNamenodesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

RefreshNamenodesResponseProto* RefreshNamenodesResponseProto::default_instance_ = NULL;

RefreshNamenodesResponseProto* RefreshNamenodesResponseProto::New() const {
  return new RefreshNamenodesResponseProto;
}

void RefreshNamenodesResponseProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshNamenodesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void RefreshNamenodesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefreshNamenodesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefreshNamenodesResponseProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshNamenodesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshNamenodesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshNamenodesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshNamenodesResponseProto::MergeFrom(const RefreshNamenodesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshNamenodesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshNamenodesResponseProto::CopyFrom(const RefreshNamenodesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshNamenodesResponseProto::IsInitialized() const {

  return true;
}

void RefreshNamenodesResponseProto::Swap(RefreshNamenodesResponseProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshNamenodesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshNamenodesResponseProto_descriptor_;
  metadata.reflection = RefreshNamenodesResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteBlockPoolRequestProto::kBlockPoolFieldNumber;
const int DeleteBlockPoolRequestProto::kForceFieldNumber;
#endif  // !_MSC_VER

DeleteBlockPoolRequestProto::DeleteBlockPoolRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeleteBlockPoolRequestProto::InitAsDefaultInstance() {
}

DeleteBlockPoolRequestProto::DeleteBlockPoolRequestProto(const DeleteBlockPoolRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeleteBlockPoolRequestProto::SharedCtor() {
  _cached_size_ = 0;
  blockpool_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  force_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteBlockPoolRequestProto::~DeleteBlockPoolRequestProto() {
  SharedDtor();
}

void DeleteBlockPoolRequestProto::SharedDtor() {
  if (blockpool_ != &::google::protobuf::internal::kEmptyString) {
    delete blockpool_;
  }
  if (this != default_instance_) {
  }
}

void DeleteBlockPoolRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBlockPoolRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteBlockPoolRequestProto_descriptor_;
}

const DeleteBlockPoolRequestProto& DeleteBlockPoolRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

DeleteBlockPoolRequestProto* DeleteBlockPoolRequestProto::default_instance_ = NULL;

DeleteBlockPoolRequestProto* DeleteBlockPoolRequestProto::New() const {
  return new DeleteBlockPoolRequestProto;
}

void DeleteBlockPoolRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_blockpool()) {
      if (blockpool_ != &::google::protobuf::internal::kEmptyString) {
        blockpool_->clear();
      }
    }
    force_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteBlockPoolRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string blockPool = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blockpool()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->blockpool().data(), this->blockpool().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_force;
        break;
      }

      // required bool force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DeleteBlockPoolRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string blockPool = 1;
  if (has_blockpool()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->blockpool().data(), this->blockpool().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->blockpool(), output);
  }

  // required bool force = 2;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->force(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeleteBlockPoolRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string blockPool = 1;
  if (has_blockpool()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->blockpool().data(), this->blockpool().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->blockpool(), target);
  }

  // required bool force = 2;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->force(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeleteBlockPoolRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string blockPool = 1;
    if (has_blockpool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blockpool());
    }

    // required bool force = 2;
    if (has_force()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBlockPoolRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteBlockPoolRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteBlockPoolRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteBlockPoolRequestProto::MergeFrom(const DeleteBlockPoolRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_blockpool()) {
      set_blockpool(from.blockpool());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteBlockPoolRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBlockPoolRequestProto::CopyFrom(const DeleteBlockPoolRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBlockPoolRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DeleteBlockPoolRequestProto::Swap(DeleteBlockPoolRequestProto* other) {
  if (other != this) {
    std::swap(blockpool_, other->blockpool_);
    std::swap(force_, other->force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteBlockPoolRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteBlockPoolRequestProto_descriptor_;
  metadata.reflection = DeleteBlockPoolRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DeleteBlockPoolResponseProto::DeleteBlockPoolResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeleteBlockPoolResponseProto::InitAsDefaultInstance() {
}

DeleteBlockPoolResponseProto::DeleteBlockPoolResponseProto(const DeleteBlockPoolResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeleteBlockPoolResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteBlockPoolResponseProto::~DeleteBlockPoolResponseProto() {
  SharedDtor();
}

void DeleteBlockPoolResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteBlockPoolResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBlockPoolResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteBlockPoolResponseProto_descriptor_;
}

const DeleteBlockPoolResponseProto& DeleteBlockPoolResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

DeleteBlockPoolResponseProto* DeleteBlockPoolResponseProto::default_instance_ = NULL;

DeleteBlockPoolResponseProto* DeleteBlockPoolResponseProto::New() const {
  return new DeleteBlockPoolResponseProto;
}

void DeleteBlockPoolResponseProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteBlockPoolResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void DeleteBlockPoolResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeleteBlockPoolResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeleteBlockPoolResponseProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBlockPoolResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteBlockPoolResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteBlockPoolResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteBlockPoolResponseProto::MergeFrom(const DeleteBlockPoolResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteBlockPoolResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBlockPoolResponseProto::CopyFrom(const DeleteBlockPoolResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBlockPoolResponseProto::IsInitialized() const {

  return true;
}

void DeleteBlockPoolResponseProto::Swap(DeleteBlockPoolResponseProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteBlockPoolResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteBlockPoolResponseProto_descriptor_;
  metadata.reflection = DeleteBlockPoolResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetBlockLocalPathInfoRequestProto::kBlockFieldNumber;
const int GetBlockLocalPathInfoRequestProto::kTokenFieldNumber;
#endif  // !_MSC_VER

GetBlockLocalPathInfoRequestProto::GetBlockLocalPathInfoRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetBlockLocalPathInfoRequestProto::InitAsDefaultInstance() {
  block_ = const_cast< ::Hdfs::Internal::ExtendedBlockProto*>(&::Hdfs::Internal::ExtendedBlockProto::default_instance());
  token_ = const_cast< ::Hdfs::Internal::TokenProto*>(&::Hdfs::Internal::TokenProto::default_instance());
}

GetBlockLocalPathInfoRequestProto::GetBlockLocalPathInfoRequestProto(const GetBlockLocalPathInfoRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetBlockLocalPathInfoRequestProto::SharedCtor() {
  _cached_size_ = 0;
  block_ = NULL;
  token_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBlockLocalPathInfoRequestProto::~GetBlockLocalPathInfoRequestProto() {
  SharedDtor();
}

void GetBlockLocalPathInfoRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete block_;
    delete token_;
  }
}

void GetBlockLocalPathInfoRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockLocalPathInfoRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBlockLocalPathInfoRequestProto_descriptor_;
}

const GetBlockLocalPathInfoRequestProto& GetBlockLocalPathInfoRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetBlockLocalPathInfoRequestProto* GetBlockLocalPathInfoRequestProto::default_instance_ = NULL;

GetBlockLocalPathInfoRequestProto* GetBlockLocalPathInfoRequestProto::New() const {
  return new GetBlockLocalPathInfoRequestProto;
}

void GetBlockLocalPathInfoRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_block()) {
      if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
    }
    if (has_token()) {
      if (token_ != NULL) token_->::Hdfs::Internal::TokenProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetBlockLocalPathInfoRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Hdfs.Internal.ExtendedBlockProto block = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // required .Hdfs.Internal.TokenProto token = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_token()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetBlockLocalPathInfoRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(), output);
  }

  // required .Hdfs.Internal.TokenProto token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetBlockLocalPathInfoRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->block(), target);
  }

  // required .Hdfs.Internal.TokenProto token = 2;
  if (has_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetBlockLocalPathInfoRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Hdfs.Internal.ExtendedBlockProto block = 1;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block());
    }

    // required .Hdfs.Internal.TokenProto token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockLocalPathInfoRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetBlockLocalPathInfoRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetBlockLocalPathInfoRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetBlockLocalPathInfoRequestProto::MergeFrom(const GetBlockLocalPathInfoRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block()) {
      mutable_block()->::Hdfs::Internal::ExtendedBlockProto::MergeFrom(from.block());
    }
    if (from.has_token()) {
      mutable_token()->::Hdfs::Internal::TokenProto::MergeFrom(from.token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetBlockLocalPathInfoRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockLocalPathInfoRequestProto::CopyFrom(const GetBlockLocalPathInfoRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockLocalPathInfoRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_block()) {
    if (!this->block().IsInitialized()) return false;
  }
  if (has_token()) {
    if (!this->token().IsInitialized()) return false;
  }
  return true;
}

void GetBlockLocalPathInfoRequestProto::Swap(GetBlockLocalPathInfoRequestProto* other) {
  if (other != this) {
    std::swap(block_, other->block_);
    std::swap(token_, other->token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetBlockLocalPathInfoRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBlockLocalPathInfoRequestProto_descriptor_;
  metadata.reflection = GetBlockLocalPathInfoRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetBlockLocalPathInfoResponseProto::kBlockFieldNumber;
const int GetBlockLocalPathInfoResponseProto::kLocalPathFieldNumber;
const int GetBlockLocalPathInfoResponseProto::kLocalMetaPathFieldNumber;
#endif  // !_MSC_VER

GetBlockLocalPathInfoResponseProto::GetBlockLocalPathInfoResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetBlockLocalPathInfoResponseProto::InitAsDefaultInstance() {
  block_ = const_cast< ::Hdfs::Internal::ExtendedBlockProto*>(&::Hdfs::Internal::ExtendedBlockProto::default_instance());
}

GetBlockLocalPathInfoResponseProto::GetBlockLocalPathInfoResponseProto(const GetBlockLocalPathInfoResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetBlockLocalPathInfoResponseProto::SharedCtor() {
  _cached_size_ = 0;
  block_ = NULL;
  localpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localmetapath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBlockLocalPathInfoResponseProto::~GetBlockLocalPathInfoResponseProto() {
  SharedDtor();
}

void GetBlockLocalPathInfoResponseProto::SharedDtor() {
  if (localpath_ != &::google::protobuf::internal::kEmptyString) {
    delete localpath_;
  }
  if (localmetapath_ != &::google::protobuf::internal::kEmptyString) {
    delete localmetapath_;
  }
  if (this != default_instance_) {
    delete block_;
  }
}

void GetBlockLocalPathInfoResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockLocalPathInfoResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBlockLocalPathInfoResponseProto_descriptor_;
}

const GetBlockLocalPathInfoResponseProto& GetBlockLocalPathInfoResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetBlockLocalPathInfoResponseProto* GetBlockLocalPathInfoResponseProto::default_instance_ = NULL;

GetBlockLocalPathInfoResponseProto* GetBlockLocalPathInfoResponseProto::New() const {
  return new GetBlockLocalPathInfoResponseProto;
}

void GetBlockLocalPathInfoResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_block()) {
      if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
    }
    if (has_localpath()) {
      if (localpath_ != &::google::protobuf::internal::kEmptyString) {
        localpath_->clear();
      }
    }
    if (has_localmetapath()) {
      if (localmetapath_ != &::google::protobuf::internal::kEmptyString) {
        localmetapath_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetBlockLocalPathInfoResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Hdfs.Internal.ExtendedBlockProto block = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_localPath;
        break;
      }

      // required string localPath = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_localPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localpath().data(), this->localpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_localMetaPath;
        break;
      }

      // required string localMetaPath = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_localMetaPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localmetapath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localmetapath().data(), this->localmetapath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetBlockLocalPathInfoResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(), output);
  }

  // required string localPath = 2;
  if (has_localpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localpath().data(), this->localpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localpath(), output);
  }

  // required string localMetaPath = 3;
  if (has_localmetapath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localmetapath().data(), this->localmetapath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->localmetapath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetBlockLocalPathInfoResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->block(), target);
  }

  // required string localPath = 2;
  if (has_localpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localpath().data(), this->localpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localpath(), target);
  }

  // required string localMetaPath = 3;
  if (has_localmetapath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localmetapath().data(), this->localmetapath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->localmetapath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetBlockLocalPathInfoResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Hdfs.Internal.ExtendedBlockProto block = 1;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block());
    }

    // required string localPath = 2;
    if (has_localpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localpath());
    }

    // required string localMetaPath = 3;
    if (has_localmetapath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localmetapath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockLocalPathInfoResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetBlockLocalPathInfoResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetBlockLocalPathInfoResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetBlockLocalPathInfoResponseProto::MergeFrom(const GetBlockLocalPathInfoResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block()) {
      mutable_block()->::Hdfs::Internal::ExtendedBlockProto::MergeFrom(from.block());
    }
    if (from.has_localpath()) {
      set_localpath(from.localpath());
    }
    if (from.has_localmetapath()) {
      set_localmetapath(from.localmetapath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetBlockLocalPathInfoResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockLocalPathInfoResponseProto::CopyFrom(const GetBlockLocalPathInfoResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockLocalPathInfoResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_block()) {
    if (!this->block().IsInitialized()) return false;
  }
  return true;
}

void GetBlockLocalPathInfoResponseProto::Swap(GetBlockLocalPathInfoResponseProto* other) {
  if (other != this) {
    std::swap(block_, other->block_);
    std::swap(localpath_, other->localpath_);
    std::swap(localmetapath_, other->localmetapath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetBlockLocalPathInfoResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBlockLocalPathInfoResponseProto_descriptor_;
  metadata.reflection = GetBlockLocalPathInfoResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetHdfsBlockLocationsRequestProto::kBlocksFieldNumber;
const int GetHdfsBlockLocationsRequestProto::kTokensFieldNumber;
#endif  // !_MSC_VER

GetHdfsBlockLocationsRequestProto::GetHdfsBlockLocationsRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetHdfsBlockLocationsRequestProto::InitAsDefaultInstance() {
}

GetHdfsBlockLocationsRequestProto::GetHdfsBlockLocationsRequestProto(const GetHdfsBlockLocationsRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetHdfsBlockLocationsRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHdfsBlockLocationsRequestProto::~GetHdfsBlockLocationsRequestProto() {
  SharedDtor();
}

void GetHdfsBlockLocationsRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetHdfsBlockLocationsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHdfsBlockLocationsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHdfsBlockLocationsRequestProto_descriptor_;
}

const GetHdfsBlockLocationsRequestProto& GetHdfsBlockLocationsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetHdfsBlockLocationsRequestProto* GetHdfsBlockLocationsRequestProto::default_instance_ = NULL;

GetHdfsBlockLocationsRequestProto* GetHdfsBlockLocationsRequestProto::New() const {
  return new GetHdfsBlockLocationsRequestProto;
}

void GetHdfsBlockLocationsRequestProto::Clear() {
  blocks_.Clear();
  tokens_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHdfsBlockLocationsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_blocks;
        if (input->ExpectTag(18)) goto parse_tokens;
        break;
      }

      // repeated .Hdfs.Internal.TokenProto tokens = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tokens:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tokens()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_tokens;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetHdfsBlockLocationsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blocks(i), output);
  }

  // repeated .Hdfs.Internal.TokenProto tokens = 2;
  for (int i = 0; i < this->tokens_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tokens(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetHdfsBlockLocationsRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->blocks(i), target);
  }

  // repeated .Hdfs.Internal.TokenProto tokens = 2;
  for (int i = 0; i < this->tokens_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tokens(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetHdfsBlockLocationsRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
  total_size += 1 * this->blocks_size();
  for (int i = 0; i < this->blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blocks(i));
  }

  // repeated .Hdfs.Internal.TokenProto tokens = 2;
  total_size += 1 * this->tokens_size();
  for (int i = 0; i < this->tokens_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tokens(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetHdfsBlockLocationsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHdfsBlockLocationsRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHdfsBlockLocationsRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHdfsBlockLocationsRequestProto::MergeFrom(const GetHdfsBlockLocationsRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  blocks_.MergeFrom(from.blocks_);
  tokens_.MergeFrom(from.tokens_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHdfsBlockLocationsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHdfsBlockLocationsRequestProto::CopyFrom(const GetHdfsBlockLocationsRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHdfsBlockLocationsRequestProto::IsInitialized() const {

  for (int i = 0; i < blocks_size(); i++) {
    if (!this->blocks(i).IsInitialized()) return false;
  }
  for (int i = 0; i < tokens_size(); i++) {
    if (!this->tokens(i).IsInitialized()) return false;
  }
  return true;
}

void GetHdfsBlockLocationsRequestProto::Swap(GetHdfsBlockLocationsRequestProto* other) {
  if (other != this) {
    blocks_.Swap(&other->blocks_);
    tokens_.Swap(&other->tokens_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHdfsBlockLocationsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHdfsBlockLocationsRequestProto_descriptor_;
  metadata.reflection = GetHdfsBlockLocationsRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetHdfsBlockLocationsResponseProto::kVolumeIdsFieldNumber;
const int GetHdfsBlockLocationsResponseProto::kVolumeIndexesFieldNumber;
#endif  // !_MSC_VER

GetHdfsBlockLocationsResponseProto::GetHdfsBlockLocationsResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetHdfsBlockLocationsResponseProto::InitAsDefaultInstance() {
}

GetHdfsBlockLocationsResponseProto::GetHdfsBlockLocationsResponseProto(const GetHdfsBlockLocationsResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetHdfsBlockLocationsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHdfsBlockLocationsResponseProto::~GetHdfsBlockLocationsResponseProto() {
  SharedDtor();
}

void GetHdfsBlockLocationsResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetHdfsBlockLocationsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHdfsBlockLocationsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHdfsBlockLocationsResponseProto_descriptor_;
}

const GetHdfsBlockLocationsResponseProto& GetHdfsBlockLocationsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  return *default_instance_;
}

GetHdfsBlockLocationsResponseProto* GetHdfsBlockLocationsResponseProto::default_instance_ = NULL;

GetHdfsBlockLocationsResponseProto* GetHdfsBlockLocationsResponseProto::New() const {
  return new GetHdfsBlockLocationsResponseProto;
}

void GetHdfsBlockLocationsResponseProto::Clear() {
  volumeids_.Clear();
  volumeindexes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHdfsBlockLocationsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes volumeIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_volumeIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_volumeids()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_volumeIds;
        if (input->ExpectTag(16)) goto parse_volumeIndexes;
        break;
      }

      // repeated uint32 volumeIndexes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_volumeIndexes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_volumeindexes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_volumeindexes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_volumeIndexes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetHdfsBlockLocationsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated bytes volumeIds = 1;
  for (int i = 0; i < this->volumeids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->volumeids(i), output);
  }

  // repeated uint32 volumeIndexes = 2;
  for (int i = 0; i < this->volumeindexes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->volumeindexes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetHdfsBlockLocationsResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated bytes volumeIds = 1;
  for (int i = 0; i < this->volumeids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->volumeids(i), target);
  }

  // repeated uint32 volumeIndexes = 2;
  for (int i = 0; i < this->volumeindexes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->volumeindexes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetHdfsBlockLocationsResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated bytes volumeIds = 1;
  total_size += 1 * this->volumeids_size();
  for (int i = 0; i < this->volumeids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->volumeids(i));
  }

  // repeated uint32 volumeIndexes = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->volumeindexes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->volumeindexes(i));
    }
    total_size += 1 * this->volumeindexes_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetHdfsBlockLocationsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHdfsBlockLocationsResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHdfsBlockLocationsResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHdfsBlockLocationsResponseProto::MergeFrom(const GetHdfsBlockLocationsResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  volumeids_.MergeFrom(from.volumeids_);
  volumeindexes_.MergeFrom(from.volumeindexes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHdfsBlockLocationsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHdfsBlockLocationsResponseProto::CopyFrom(const GetHdfsBlockLocationsResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHdfsBlockLocationsResponseProto::IsInitialized() const {

  return true;
}

void GetHdfsBlockLocationsResponseProto::Swap(GetHdfsBlockLocationsResponseProto* other) {
  if (other != this) {
    volumeids_.Swap(&other->volumeids_);
    volumeindexes_.Swap(&other->volumeindexes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHdfsBlockLocationsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHdfsBlockLocationsResponseProto_descriptor_;
  metadata.reflection = GetHdfsBlockLocationsResponseProto_reflection_;
  return metadata;
}


// ===================================================================

ClientDatanodeProtocolService::~ClientDatanodeProtocolService() {}

const ::google::protobuf::ServiceDescriptor* ClientDatanodeProtocolService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientDatanodeProtocolService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* ClientDatanodeProtocolService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientDatanodeProtocolService_descriptor_;
}

void ClientDatanodeProtocolService::getReplicaVisibleLength(::google::protobuf::RpcController* controller,
                         const ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto*,
                         ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getReplicaVisibleLength() not implemented.");
  done->Run();
}

void ClientDatanodeProtocolService::refreshNamenodes(::google::protobuf::RpcController* controller,
                         const ::Hdfs::Internal::RefreshNamenodesRequestProto*,
                         ::Hdfs::Internal::RefreshNamenodesResponseProto*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method refreshNamenodes() not implemented.");
  done->Run();
}

void ClientDatanodeProtocolService::deleteBlockPool(::google::protobuf::RpcController* controller,
                         const ::Hdfs::Internal::DeleteBlockPoolRequestProto*,
                         ::Hdfs::Internal::DeleteBlockPoolResponseProto*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method deleteBlockPool() not implemented.");
  done->Run();
}

void ClientDatanodeProtocolService::getBlockLocalPathInfo(::google::protobuf::RpcController* controller,
                         const ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto*,
                         ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getBlockLocalPathInfo() not implemented.");
  done->Run();
}

void ClientDatanodeProtocolService::getHdfsBlockLocations(::google::protobuf::RpcController* controller,
                         const ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto*,
                         ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getHdfsBlockLocations() not implemented.");
  done->Run();
}

void ClientDatanodeProtocolService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), ClientDatanodeProtocolService_descriptor_);
  switch(method->index()) {
    case 0:
      getReplicaVisibleLength(controller,
             ::google::protobuf::down_cast<const ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto*>(request),
             ::google::protobuf::down_cast< ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto*>(response),
             done);
      break;
    case 1:
      refreshNamenodes(controller,
             ::google::protobuf::down_cast<const ::Hdfs::Internal::RefreshNamenodesRequestProto*>(request),
             ::google::protobuf::down_cast< ::Hdfs::Internal::RefreshNamenodesResponseProto*>(response),
             done);
      break;
    case 2:
      deleteBlockPool(controller,
             ::google::protobuf::down_cast<const ::Hdfs::Internal::DeleteBlockPoolRequestProto*>(request),
             ::google::protobuf::down_cast< ::Hdfs::Internal::DeleteBlockPoolResponseProto*>(response),
             done);
      break;
    case 3:
      getBlockLocalPathInfo(controller,
             ::google::protobuf::down_cast<const ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto*>(request),
             ::google::protobuf::down_cast< ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto*>(response),
             done);
      break;
    case 4:
      getHdfsBlockLocations(controller,
             ::google::protobuf::down_cast<const ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto*>(request),
             ::google::protobuf::down_cast< ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ClientDatanodeProtocolService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto::default_instance();
    case 1:
      return ::Hdfs::Internal::RefreshNamenodesRequestProto::default_instance();
    case 2:
      return ::Hdfs::Internal::DeleteBlockPoolRequestProto::default_instance();
    case 3:
      return ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto::default_instance();
    case 4:
      return ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& ClientDatanodeProtocolService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto::default_instance();
    case 1:
      return ::Hdfs::Internal::RefreshNamenodesResponseProto::default_instance();
    case 2:
      return ::Hdfs::Internal::DeleteBlockPoolResponseProto::default_instance();
    case 3:
      return ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto::default_instance();
    case 4:
      return ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

ClientDatanodeProtocolService_Stub::ClientDatanodeProtocolService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ClientDatanodeProtocolService_Stub::ClientDatanodeProtocolService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ClientDatanodeProtocolService_Stub::~ClientDatanodeProtocolService_Stub() {
  if (owns_channel_) delete channel_;
}

void ClientDatanodeProtocolService_Stub::getReplicaVisibleLength(::google::protobuf::RpcController* controller,
                              const ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto* request,
                              ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ClientDatanodeProtocolService_Stub::refreshNamenodes(::google::protobuf::RpcController* controller,
                              const ::Hdfs::Internal::RefreshNamenodesRequestProto* request,
                              ::Hdfs::Internal::RefreshNamenodesResponseProto* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ClientDatanodeProtocolService_Stub::deleteBlockPool(::google::protobuf::RpcController* controller,
                              const ::Hdfs::Internal::DeleteBlockPoolRequestProto* request,
                              ::Hdfs::Internal::DeleteBlockPoolResponseProto* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void ClientDatanodeProtocolService_Stub::getBlockLocalPathInfo(::google::protobuf::RpcController* controller,
                              const ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto* request,
                              ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void ClientDatanodeProtocolService_Stub::getHdfsBlockLocations(::google::protobuf::RpcController* controller,
                              const ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto* request,
                              ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Hdfs

// @@protoc_insertion_point(global_scope)
