// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientDatanodeProtocol.proto

#ifndef PROTOBUF_ClientDatanodeProtocol_2eproto__INCLUDED
#define PROTOBUF_ClientDatanodeProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "hdfs.pb.h"
#include "Security.pb.h"
// @@protoc_insertion_point(includes)

namespace Hdfs {
namespace Internal {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

class GetReplicaVisibleLengthRequestProto;
class GetReplicaVisibleLengthResponseProto;
class RefreshNamenodesRequestProto;
class RefreshNamenodesResponseProto;
class DeleteBlockPoolRequestProto;
class DeleteBlockPoolResponseProto;
class GetBlockLocalPathInfoRequestProto;
class GetBlockLocalPathInfoResponseProto;
class GetHdfsBlockLocationsRequestProto;
class GetHdfsBlockLocationsResponseProto;

// ===================================================================

class GetReplicaVisibleLengthRequestProto : public ::google::protobuf::Message {
 public:
  GetReplicaVisibleLengthRequestProto();
  virtual ~GetReplicaVisibleLengthRequestProto();

  GetReplicaVisibleLengthRequestProto(const GetReplicaVisibleLengthRequestProto& from);

  inline GetReplicaVisibleLengthRequestProto& operator=(const GetReplicaVisibleLengthRequestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReplicaVisibleLengthRequestProto& default_instance();

  void Swap(GetReplicaVisibleLengthRequestProto* other);

  // implements Message ----------------------------------------------

  GetReplicaVisibleLengthRequestProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReplicaVisibleLengthRequestProto& from);
  void MergeFrom(const GetReplicaVisibleLengthRequestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 1;
  inline const ::Hdfs::Internal::ExtendedBlockProto& block() const;
  inline ::Hdfs::Internal::ExtendedBlockProto* mutable_block();
  inline ::Hdfs::Internal::ExtendedBlockProto* release_block();
  inline void set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block);

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetReplicaVisibleLengthRequestProto)
 private:
  inline void set_has_block();
  inline void clear_has_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Hdfs::Internal::ExtendedBlockProto* block_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetReplicaVisibleLengthRequestProto* default_instance_;
};
// -------------------------------------------------------------------

class GetReplicaVisibleLengthResponseProto : public ::google::protobuf::Message {
 public:
  GetReplicaVisibleLengthResponseProto();
  virtual ~GetReplicaVisibleLengthResponseProto();

  GetReplicaVisibleLengthResponseProto(const GetReplicaVisibleLengthResponseProto& from);

  inline GetReplicaVisibleLengthResponseProto& operator=(const GetReplicaVisibleLengthResponseProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReplicaVisibleLengthResponseProto& default_instance();

  void Swap(GetReplicaVisibleLengthResponseProto* other);

  // implements Message ----------------------------------------------

  GetReplicaVisibleLengthResponseProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReplicaVisibleLengthResponseProto& from);
  void MergeFrom(const GetReplicaVisibleLengthResponseProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint64 length() const;
  inline void set_length(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetReplicaVisibleLengthResponseProto)
 private:
  inline void set_has_length();
  inline void clear_has_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 length_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetReplicaVisibleLengthResponseProto* default_instance_;
};
// -------------------------------------------------------------------

class RefreshNamenodesRequestProto : public ::google::protobuf::Message {
 public:
  RefreshNamenodesRequestProto();
  virtual ~RefreshNamenodesRequestProto();

  RefreshNamenodesRequestProto(const RefreshNamenodesRequestProto& from);

  inline RefreshNamenodesRequestProto& operator=(const RefreshNamenodesRequestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshNamenodesRequestProto& default_instance();

  void Swap(RefreshNamenodesRequestProto* other);

  // implements Message ----------------------------------------------

  RefreshNamenodesRequestProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshNamenodesRequestProto& from);
  void MergeFrom(const RefreshNamenodesRequestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.RefreshNamenodesRequestProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static RefreshNamenodesRequestProto* default_instance_;
};
// -------------------------------------------------------------------

class RefreshNamenodesResponseProto : public ::google::protobuf::Message {
 public:
  RefreshNamenodesResponseProto();
  virtual ~RefreshNamenodesResponseProto();

  RefreshNamenodesResponseProto(const RefreshNamenodesResponseProto& from);

  inline RefreshNamenodesResponseProto& operator=(const RefreshNamenodesResponseProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshNamenodesResponseProto& default_instance();

  void Swap(RefreshNamenodesResponseProto* other);

  // implements Message ----------------------------------------------

  RefreshNamenodesResponseProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshNamenodesResponseProto& from);
  void MergeFrom(const RefreshNamenodesResponseProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.RefreshNamenodesResponseProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static RefreshNamenodesResponseProto* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBlockPoolRequestProto : public ::google::protobuf::Message {
 public:
  DeleteBlockPoolRequestProto();
  virtual ~DeleteBlockPoolRequestProto();

  DeleteBlockPoolRequestProto(const DeleteBlockPoolRequestProto& from);

  inline DeleteBlockPoolRequestProto& operator=(const DeleteBlockPoolRequestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBlockPoolRequestProto& default_instance();

  void Swap(DeleteBlockPoolRequestProto* other);

  // implements Message ----------------------------------------------

  DeleteBlockPoolRequestProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteBlockPoolRequestProto& from);
  void MergeFrom(const DeleteBlockPoolRequestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string blockPool = 1;
  inline bool has_blockpool() const;
  inline void clear_blockpool();
  static const int kBlockPoolFieldNumber = 1;
  inline const ::std::string& blockpool() const;
  inline void set_blockpool(const ::std::string& value);
  inline void set_blockpool(const char* value);
  inline void set_blockpool(const char* value, size_t size);
  inline ::std::string* mutable_blockpool();
  inline ::std::string* release_blockpool();
  inline void set_allocated_blockpool(::std::string* blockpool);

  // required bool force = 2;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 2;
  inline bool force() const;
  inline void set_force(bool value);

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.DeleteBlockPoolRequestProto)
 private:
  inline void set_has_blockpool();
  inline void clear_has_blockpool();
  inline void set_has_force();
  inline void clear_has_force();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* blockpool_;
  bool force_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteBlockPoolRequestProto* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBlockPoolResponseProto : public ::google::protobuf::Message {
 public:
  DeleteBlockPoolResponseProto();
  virtual ~DeleteBlockPoolResponseProto();

  DeleteBlockPoolResponseProto(const DeleteBlockPoolResponseProto& from);

  inline DeleteBlockPoolResponseProto& operator=(const DeleteBlockPoolResponseProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBlockPoolResponseProto& default_instance();

  void Swap(DeleteBlockPoolResponseProto* other);

  // implements Message ----------------------------------------------

  DeleteBlockPoolResponseProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteBlockPoolResponseProto& from);
  void MergeFrom(const DeleteBlockPoolResponseProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.DeleteBlockPoolResponseProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteBlockPoolResponseProto* default_instance_;
};
// -------------------------------------------------------------------

class GetBlockLocalPathInfoRequestProto : public ::google::protobuf::Message {
 public:
  GetBlockLocalPathInfoRequestProto();
  virtual ~GetBlockLocalPathInfoRequestProto();

  GetBlockLocalPathInfoRequestProto(const GetBlockLocalPathInfoRequestProto& from);

  inline GetBlockLocalPathInfoRequestProto& operator=(const GetBlockLocalPathInfoRequestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBlockLocalPathInfoRequestProto& default_instance();

  void Swap(GetBlockLocalPathInfoRequestProto* other);

  // implements Message ----------------------------------------------

  GetBlockLocalPathInfoRequestProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBlockLocalPathInfoRequestProto& from);
  void MergeFrom(const GetBlockLocalPathInfoRequestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 1;
  inline const ::Hdfs::Internal::ExtendedBlockProto& block() const;
  inline ::Hdfs::Internal::ExtendedBlockProto* mutable_block();
  inline ::Hdfs::Internal::ExtendedBlockProto* release_block();
  inline void set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block);

  // required .Hdfs.Internal.TokenProto token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::Hdfs::Internal::TokenProto& token() const;
  inline ::Hdfs::Internal::TokenProto* mutable_token();
  inline ::Hdfs::Internal::TokenProto* release_token();
  inline void set_allocated_token(::Hdfs::Internal::TokenProto* token);

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetBlockLocalPathInfoRequestProto)
 private:
  inline void set_has_block();
  inline void clear_has_block();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Hdfs::Internal::ExtendedBlockProto* block_;
  ::Hdfs::Internal::TokenProto* token_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetBlockLocalPathInfoRequestProto* default_instance_;
};
// -------------------------------------------------------------------

class GetBlockLocalPathInfoResponseProto : public ::google::protobuf::Message {
 public:
  GetBlockLocalPathInfoResponseProto();
  virtual ~GetBlockLocalPathInfoResponseProto();

  GetBlockLocalPathInfoResponseProto(const GetBlockLocalPathInfoResponseProto& from);

  inline GetBlockLocalPathInfoResponseProto& operator=(const GetBlockLocalPathInfoResponseProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBlockLocalPathInfoResponseProto& default_instance();

  void Swap(GetBlockLocalPathInfoResponseProto* other);

  // implements Message ----------------------------------------------

  GetBlockLocalPathInfoResponseProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBlockLocalPathInfoResponseProto& from);
  void MergeFrom(const GetBlockLocalPathInfoResponseProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Hdfs.Internal.ExtendedBlockProto block = 1;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 1;
  inline const ::Hdfs::Internal::ExtendedBlockProto& block() const;
  inline ::Hdfs::Internal::ExtendedBlockProto* mutable_block();
  inline ::Hdfs::Internal::ExtendedBlockProto* release_block();
  inline void set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block);

  // required string localPath = 2;
  inline bool has_localpath() const;
  inline void clear_localpath();
  static const int kLocalPathFieldNumber = 2;
  inline const ::std::string& localpath() const;
  inline void set_localpath(const ::std::string& value);
  inline void set_localpath(const char* value);
  inline void set_localpath(const char* value, size_t size);
  inline ::std::string* mutable_localpath();
  inline ::std::string* release_localpath();
  inline void set_allocated_localpath(::std::string* localpath);

  // required string localMetaPath = 3;
  inline bool has_localmetapath() const;
  inline void clear_localmetapath();
  static const int kLocalMetaPathFieldNumber = 3;
  inline const ::std::string& localmetapath() const;
  inline void set_localmetapath(const ::std::string& value);
  inline void set_localmetapath(const char* value);
  inline void set_localmetapath(const char* value, size_t size);
  inline ::std::string* mutable_localmetapath();
  inline ::std::string* release_localmetapath();
  inline void set_allocated_localmetapath(::std::string* localmetapath);

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetBlockLocalPathInfoResponseProto)
 private:
  inline void set_has_block();
  inline void clear_has_block();
  inline void set_has_localpath();
  inline void clear_has_localpath();
  inline void set_has_localmetapath();
  inline void clear_has_localmetapath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Hdfs::Internal::ExtendedBlockProto* block_;
  ::std::string* localpath_;
  ::std::string* localmetapath_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetBlockLocalPathInfoResponseProto* default_instance_;
};
// -------------------------------------------------------------------

class GetHdfsBlockLocationsRequestProto : public ::google::protobuf::Message {
 public:
  GetHdfsBlockLocationsRequestProto();
  virtual ~GetHdfsBlockLocationsRequestProto();

  GetHdfsBlockLocationsRequestProto(const GetHdfsBlockLocationsRequestProto& from);

  inline GetHdfsBlockLocationsRequestProto& operator=(const GetHdfsBlockLocationsRequestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetHdfsBlockLocationsRequestProto& default_instance();

  void Swap(GetHdfsBlockLocationsRequestProto* other);

  // implements Message ----------------------------------------------

  GetHdfsBlockLocationsRequestProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetHdfsBlockLocationsRequestProto& from);
  void MergeFrom(const GetHdfsBlockLocationsRequestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
  inline int blocks_size() const;
  inline void clear_blocks();
  static const int kBlocksFieldNumber = 1;
  inline const ::Hdfs::Internal::ExtendedBlockProto& blocks(int index) const;
  inline ::Hdfs::Internal::ExtendedBlockProto* mutable_blocks(int index);
  inline ::Hdfs::Internal::ExtendedBlockProto* add_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::ExtendedBlockProto >&
      blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::ExtendedBlockProto >*
      mutable_blocks();

  // repeated .Hdfs.Internal.TokenProto tokens = 2;
  inline int tokens_size() const;
  inline void clear_tokens();
  static const int kTokensFieldNumber = 2;
  inline const ::Hdfs::Internal::TokenProto& tokens(int index) const;
  inline ::Hdfs::Internal::TokenProto* mutable_tokens(int index);
  inline ::Hdfs::Internal::TokenProto* add_tokens();
  inline const ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::TokenProto >&
      tokens() const;
  inline ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::TokenProto >*
      mutable_tokens();

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetHdfsBlockLocationsRequestProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::ExtendedBlockProto > blocks_;
  ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::TokenProto > tokens_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetHdfsBlockLocationsRequestProto* default_instance_;
};
// -------------------------------------------------------------------

class GetHdfsBlockLocationsResponseProto : public ::google::protobuf::Message {
 public:
  GetHdfsBlockLocationsResponseProto();
  virtual ~GetHdfsBlockLocationsResponseProto();

  GetHdfsBlockLocationsResponseProto(const GetHdfsBlockLocationsResponseProto& from);

  inline GetHdfsBlockLocationsResponseProto& operator=(const GetHdfsBlockLocationsResponseProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetHdfsBlockLocationsResponseProto& default_instance();

  void Swap(GetHdfsBlockLocationsResponseProto* other);

  // implements Message ----------------------------------------------

  GetHdfsBlockLocationsResponseProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetHdfsBlockLocationsResponseProto& from);
  void MergeFrom(const GetHdfsBlockLocationsResponseProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes volumeIds = 1;
  inline int volumeids_size() const;
  inline void clear_volumeids();
  static const int kVolumeIdsFieldNumber = 1;
  inline const ::std::string& volumeids(int index) const;
  inline ::std::string* mutable_volumeids(int index);
  inline void set_volumeids(int index, const ::std::string& value);
  inline void set_volumeids(int index, const char* value);
  inline void set_volumeids(int index, const void* value, size_t size);
  inline ::std::string* add_volumeids();
  inline void add_volumeids(const ::std::string& value);
  inline void add_volumeids(const char* value);
  inline void add_volumeids(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& volumeids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_volumeids();

  // repeated uint32 volumeIndexes = 2;
  inline int volumeindexes_size() const;
  inline void clear_volumeindexes();
  static const int kVolumeIndexesFieldNumber = 2;
  inline ::google::protobuf::uint32 volumeindexes(int index) const;
  inline void set_volumeindexes(int index, ::google::protobuf::uint32 value);
  inline void add_volumeindexes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      volumeindexes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_volumeindexes();

  // @@protoc_insertion_point(class_scope:Hdfs.Internal.GetHdfsBlockLocationsResponseProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> volumeids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > volumeindexes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_AssignDesc_ClientDatanodeProtocol_2eproto();
  friend void protobuf_ShutdownFile_ClientDatanodeProtocol_2eproto();

  void InitAsDefaultInstance();
  static GetHdfsBlockLocationsResponseProto* default_instance_;
};
// ===================================================================

class ClientDatanodeProtocolService_Stub;

class ClientDatanodeProtocolService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ClientDatanodeProtocolService() {};
 public:
  virtual ~ClientDatanodeProtocolService();

  typedef ClientDatanodeProtocolService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void getReplicaVisibleLength(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto* request,
                       ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void refreshNamenodes(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::RefreshNamenodesRequestProto* request,
                       ::Hdfs::Internal::RefreshNamenodesResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void deleteBlockPool(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::DeleteBlockPoolRequestProto* request,
                       ::Hdfs::Internal::DeleteBlockPoolResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void getBlockLocalPathInfo(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto* request,
                       ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void getHdfsBlockLocations(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto* request,
                       ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClientDatanodeProtocolService);
};

class ClientDatanodeProtocolService_Stub : public ClientDatanodeProtocolService {
 public:
  ClientDatanodeProtocolService_Stub(::google::protobuf::RpcChannel* channel);
  ClientDatanodeProtocolService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ClientDatanodeProtocolService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ClientDatanodeProtocolService ------------------------------------------

  void getReplicaVisibleLength(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetReplicaVisibleLengthRequestProto* request,
                       ::Hdfs::Internal::GetReplicaVisibleLengthResponseProto* response,
                       ::google::protobuf::Closure* done);
  void refreshNamenodes(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::RefreshNamenodesRequestProto* request,
                       ::Hdfs::Internal::RefreshNamenodesResponseProto* response,
                       ::google::protobuf::Closure* done);
  void deleteBlockPool(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::DeleteBlockPoolRequestProto* request,
                       ::Hdfs::Internal::DeleteBlockPoolResponseProto* response,
                       ::google::protobuf::Closure* done);
  void getBlockLocalPathInfo(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetBlockLocalPathInfoRequestProto* request,
                       ::Hdfs::Internal::GetBlockLocalPathInfoResponseProto* response,
                       ::google::protobuf::Closure* done);
  void getHdfsBlockLocations(::google::protobuf::RpcController* controller,
                       const ::Hdfs::Internal::GetHdfsBlockLocationsRequestProto* request,
                       ::Hdfs::Internal::GetHdfsBlockLocationsResponseProto* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClientDatanodeProtocolService_Stub);
};


// ===================================================================


// ===================================================================

// GetReplicaVisibleLengthRequestProto

// required .Hdfs.Internal.ExtendedBlockProto block = 1;
inline bool GetReplicaVisibleLengthRequestProto::has_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetReplicaVisibleLengthRequestProto::set_has_block() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetReplicaVisibleLengthRequestProto::clear_has_block() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetReplicaVisibleLengthRequestProto::clear_block() {
  if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
  clear_has_block();
}
inline const ::Hdfs::Internal::ExtendedBlockProto& GetReplicaVisibleLengthRequestProto::block() const {
  return block_ != NULL ? *block_ : *default_instance_->block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetReplicaVisibleLengthRequestProto::mutable_block() {
  set_has_block();
  if (block_ == NULL) block_ = new ::Hdfs::Internal::ExtendedBlockProto;
  return block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetReplicaVisibleLengthRequestProto::release_block() {
  clear_has_block();
  ::Hdfs::Internal::ExtendedBlockProto* temp = block_;
  block_ = NULL;
  return temp;
}
inline void GetReplicaVisibleLengthRequestProto::set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block) {
  delete block_;
  block_ = block;
  if (block) {
    set_has_block();
  } else {
    clear_has_block();
  }
}

// -------------------------------------------------------------------

// GetReplicaVisibleLengthResponseProto

// required uint64 length = 1;
inline bool GetReplicaVisibleLengthResponseProto::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetReplicaVisibleLengthResponseProto::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetReplicaVisibleLengthResponseProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetReplicaVisibleLengthResponseProto::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
inline ::google::protobuf::uint64 GetReplicaVisibleLengthResponseProto::length() const {
  return length_;
}
inline void GetReplicaVisibleLengthResponseProto::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
}

// -------------------------------------------------------------------

// RefreshNamenodesRequestProto

// -------------------------------------------------------------------

// RefreshNamenodesResponseProto

// -------------------------------------------------------------------

// DeleteBlockPoolRequestProto

// required string blockPool = 1;
inline bool DeleteBlockPoolRequestProto::has_blockpool() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBlockPoolRequestProto::set_has_blockpool() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBlockPoolRequestProto::clear_has_blockpool() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBlockPoolRequestProto::clear_blockpool() {
  if (blockpool_ != &::google::protobuf::internal::kEmptyString) {
    blockpool_->clear();
  }
  clear_has_blockpool();
}
inline const ::std::string& DeleteBlockPoolRequestProto::blockpool() const {
  return *blockpool_;
}
inline void DeleteBlockPoolRequestProto::set_blockpool(const ::std::string& value) {
  set_has_blockpool();
  if (blockpool_ == &::google::protobuf::internal::kEmptyString) {
    blockpool_ = new ::std::string;
  }
  blockpool_->assign(value);
}
inline void DeleteBlockPoolRequestProto::set_blockpool(const char* value) {
  set_has_blockpool();
  if (blockpool_ == &::google::protobuf::internal::kEmptyString) {
    blockpool_ = new ::std::string;
  }
  blockpool_->assign(value);
}
inline void DeleteBlockPoolRequestProto::set_blockpool(const char* value, size_t size) {
  set_has_blockpool();
  if (blockpool_ == &::google::protobuf::internal::kEmptyString) {
    blockpool_ = new ::std::string;
  }
  blockpool_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteBlockPoolRequestProto::mutable_blockpool() {
  set_has_blockpool();
  if (blockpool_ == &::google::protobuf::internal::kEmptyString) {
    blockpool_ = new ::std::string;
  }
  return blockpool_;
}
inline ::std::string* DeleteBlockPoolRequestProto::release_blockpool() {
  clear_has_blockpool();
  if (blockpool_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = blockpool_;
    blockpool_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeleteBlockPoolRequestProto::set_allocated_blockpool(::std::string* blockpool) {
  if (blockpool_ != &::google::protobuf::internal::kEmptyString) {
    delete blockpool_;
  }
  if (blockpool) {
    set_has_blockpool();
    blockpool_ = blockpool;
  } else {
    clear_has_blockpool();
    blockpool_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool force = 2;
inline bool DeleteBlockPoolRequestProto::has_force() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteBlockPoolRequestProto::set_has_force() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteBlockPoolRequestProto::clear_has_force() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteBlockPoolRequestProto::clear_force() {
  force_ = false;
  clear_has_force();
}
inline bool DeleteBlockPoolRequestProto::force() const {
  return force_;
}
inline void DeleteBlockPoolRequestProto::set_force(bool value) {
  set_has_force();
  force_ = value;
}

// -------------------------------------------------------------------

// DeleteBlockPoolResponseProto

// -------------------------------------------------------------------

// GetBlockLocalPathInfoRequestProto

// required .Hdfs.Internal.ExtendedBlockProto block = 1;
inline bool GetBlockLocalPathInfoRequestProto::has_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBlockLocalPathInfoRequestProto::set_has_block() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBlockLocalPathInfoRequestProto::clear_has_block() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBlockLocalPathInfoRequestProto::clear_block() {
  if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
  clear_has_block();
}
inline const ::Hdfs::Internal::ExtendedBlockProto& GetBlockLocalPathInfoRequestProto::block() const {
  return block_ != NULL ? *block_ : *default_instance_->block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetBlockLocalPathInfoRequestProto::mutable_block() {
  set_has_block();
  if (block_ == NULL) block_ = new ::Hdfs::Internal::ExtendedBlockProto;
  return block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetBlockLocalPathInfoRequestProto::release_block() {
  clear_has_block();
  ::Hdfs::Internal::ExtendedBlockProto* temp = block_;
  block_ = NULL;
  return temp;
}
inline void GetBlockLocalPathInfoRequestProto::set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block) {
  delete block_;
  block_ = block;
  if (block) {
    set_has_block();
  } else {
    clear_has_block();
  }
}

// required .Hdfs.Internal.TokenProto token = 2;
inline bool GetBlockLocalPathInfoRequestProto::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBlockLocalPathInfoRequestProto::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBlockLocalPathInfoRequestProto::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBlockLocalPathInfoRequestProto::clear_token() {
  if (token_ != NULL) token_->::Hdfs::Internal::TokenProto::Clear();
  clear_has_token();
}
inline const ::Hdfs::Internal::TokenProto& GetBlockLocalPathInfoRequestProto::token() const {
  return token_ != NULL ? *token_ : *default_instance_->token_;
}
inline ::Hdfs::Internal::TokenProto* GetBlockLocalPathInfoRequestProto::mutable_token() {
  set_has_token();
  if (token_ == NULL) token_ = new ::Hdfs::Internal::TokenProto;
  return token_;
}
inline ::Hdfs::Internal::TokenProto* GetBlockLocalPathInfoRequestProto::release_token() {
  clear_has_token();
  ::Hdfs::Internal::TokenProto* temp = token_;
  token_ = NULL;
  return temp;
}
inline void GetBlockLocalPathInfoRequestProto::set_allocated_token(::Hdfs::Internal::TokenProto* token) {
  delete token_;
  token_ = token;
  if (token) {
    set_has_token();
  } else {
    clear_has_token();
  }
}

// -------------------------------------------------------------------

// GetBlockLocalPathInfoResponseProto

// required .Hdfs.Internal.ExtendedBlockProto block = 1;
inline bool GetBlockLocalPathInfoResponseProto::has_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBlockLocalPathInfoResponseProto::set_has_block() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_has_block() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_block() {
  if (block_ != NULL) block_->::Hdfs::Internal::ExtendedBlockProto::Clear();
  clear_has_block();
}
inline const ::Hdfs::Internal::ExtendedBlockProto& GetBlockLocalPathInfoResponseProto::block() const {
  return block_ != NULL ? *block_ : *default_instance_->block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetBlockLocalPathInfoResponseProto::mutable_block() {
  set_has_block();
  if (block_ == NULL) block_ = new ::Hdfs::Internal::ExtendedBlockProto;
  return block_;
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetBlockLocalPathInfoResponseProto::release_block() {
  clear_has_block();
  ::Hdfs::Internal::ExtendedBlockProto* temp = block_;
  block_ = NULL;
  return temp;
}
inline void GetBlockLocalPathInfoResponseProto::set_allocated_block(::Hdfs::Internal::ExtendedBlockProto* block) {
  delete block_;
  block_ = block;
  if (block) {
    set_has_block();
  } else {
    clear_has_block();
  }
}

// required string localPath = 2;
inline bool GetBlockLocalPathInfoResponseProto::has_localpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBlockLocalPathInfoResponseProto::set_has_localpath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_has_localpath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_localpath() {
  if (localpath_ != &::google::protobuf::internal::kEmptyString) {
    localpath_->clear();
  }
  clear_has_localpath();
}
inline const ::std::string& GetBlockLocalPathInfoResponseProto::localpath() const {
  return *localpath_;
}
inline void GetBlockLocalPathInfoResponseProto::set_localpath(const ::std::string& value) {
  set_has_localpath();
  if (localpath_ == &::google::protobuf::internal::kEmptyString) {
    localpath_ = new ::std::string;
  }
  localpath_->assign(value);
}
inline void GetBlockLocalPathInfoResponseProto::set_localpath(const char* value) {
  set_has_localpath();
  if (localpath_ == &::google::protobuf::internal::kEmptyString) {
    localpath_ = new ::std::string;
  }
  localpath_->assign(value);
}
inline void GetBlockLocalPathInfoResponseProto::set_localpath(const char* value, size_t size) {
  set_has_localpath();
  if (localpath_ == &::google::protobuf::internal::kEmptyString) {
    localpath_ = new ::std::string;
  }
  localpath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBlockLocalPathInfoResponseProto::mutable_localpath() {
  set_has_localpath();
  if (localpath_ == &::google::protobuf::internal::kEmptyString) {
    localpath_ = new ::std::string;
  }
  return localpath_;
}
inline ::std::string* GetBlockLocalPathInfoResponseProto::release_localpath() {
  clear_has_localpath();
  if (localpath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = localpath_;
    localpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetBlockLocalPathInfoResponseProto::set_allocated_localpath(::std::string* localpath) {
  if (localpath_ != &::google::protobuf::internal::kEmptyString) {
    delete localpath_;
  }
  if (localpath) {
    set_has_localpath();
    localpath_ = localpath;
  } else {
    clear_has_localpath();
    localpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string localMetaPath = 3;
inline bool GetBlockLocalPathInfoResponseProto::has_localmetapath() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetBlockLocalPathInfoResponseProto::set_has_localmetapath() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_has_localmetapath() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetBlockLocalPathInfoResponseProto::clear_localmetapath() {
  if (localmetapath_ != &::google::protobuf::internal::kEmptyString) {
    localmetapath_->clear();
  }
  clear_has_localmetapath();
}
inline const ::std::string& GetBlockLocalPathInfoResponseProto::localmetapath() const {
  return *localmetapath_;
}
inline void GetBlockLocalPathInfoResponseProto::set_localmetapath(const ::std::string& value) {
  set_has_localmetapath();
  if (localmetapath_ == &::google::protobuf::internal::kEmptyString) {
    localmetapath_ = new ::std::string;
  }
  localmetapath_->assign(value);
}
inline void GetBlockLocalPathInfoResponseProto::set_localmetapath(const char* value) {
  set_has_localmetapath();
  if (localmetapath_ == &::google::protobuf::internal::kEmptyString) {
    localmetapath_ = new ::std::string;
  }
  localmetapath_->assign(value);
}
inline void GetBlockLocalPathInfoResponseProto::set_localmetapath(const char* value, size_t size) {
  set_has_localmetapath();
  if (localmetapath_ == &::google::protobuf::internal::kEmptyString) {
    localmetapath_ = new ::std::string;
  }
  localmetapath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBlockLocalPathInfoResponseProto::mutable_localmetapath() {
  set_has_localmetapath();
  if (localmetapath_ == &::google::protobuf::internal::kEmptyString) {
    localmetapath_ = new ::std::string;
  }
  return localmetapath_;
}
inline ::std::string* GetBlockLocalPathInfoResponseProto::release_localmetapath() {
  clear_has_localmetapath();
  if (localmetapath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = localmetapath_;
    localmetapath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetBlockLocalPathInfoResponseProto::set_allocated_localmetapath(::std::string* localmetapath) {
  if (localmetapath_ != &::google::protobuf::internal::kEmptyString) {
    delete localmetapath_;
  }
  if (localmetapath) {
    set_has_localmetapath();
    localmetapath_ = localmetapath;
  } else {
    clear_has_localmetapath();
    localmetapath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetHdfsBlockLocationsRequestProto

// repeated .Hdfs.Internal.ExtendedBlockProto blocks = 1;
inline int GetHdfsBlockLocationsRequestProto::blocks_size() const {
  return blocks_.size();
}
inline void GetHdfsBlockLocationsRequestProto::clear_blocks() {
  blocks_.Clear();
}
inline const ::Hdfs::Internal::ExtendedBlockProto& GetHdfsBlockLocationsRequestProto::blocks(int index) const {
  return blocks_.Get(index);
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetHdfsBlockLocationsRequestProto::mutable_blocks(int index) {
  return blocks_.Mutable(index);
}
inline ::Hdfs::Internal::ExtendedBlockProto* GetHdfsBlockLocationsRequestProto::add_blocks() {
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::ExtendedBlockProto >&
GetHdfsBlockLocationsRequestProto::blocks() const {
  return blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::ExtendedBlockProto >*
GetHdfsBlockLocationsRequestProto::mutable_blocks() {
  return &blocks_;
}

// repeated .Hdfs.Internal.TokenProto tokens = 2;
inline int GetHdfsBlockLocationsRequestProto::tokens_size() const {
  return tokens_.size();
}
inline void GetHdfsBlockLocationsRequestProto::clear_tokens() {
  tokens_.Clear();
}
inline const ::Hdfs::Internal::TokenProto& GetHdfsBlockLocationsRequestProto::tokens(int index) const {
  return tokens_.Get(index);
}
inline ::Hdfs::Internal::TokenProto* GetHdfsBlockLocationsRequestProto::mutable_tokens(int index) {
  return tokens_.Mutable(index);
}
inline ::Hdfs::Internal::TokenProto* GetHdfsBlockLocationsRequestProto::add_tokens() {
  return tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::TokenProto >&
GetHdfsBlockLocationsRequestProto::tokens() const {
  return tokens_;
}
inline ::google::protobuf::RepeatedPtrField< ::Hdfs::Internal::TokenProto >*
GetHdfsBlockLocationsRequestProto::mutable_tokens() {
  return &tokens_;
}

// -------------------------------------------------------------------

// GetHdfsBlockLocationsResponseProto

// repeated bytes volumeIds = 1;
inline int GetHdfsBlockLocationsResponseProto::volumeids_size() const {
  return volumeids_.size();
}
inline void GetHdfsBlockLocationsResponseProto::clear_volumeids() {
  volumeids_.Clear();
}
inline const ::std::string& GetHdfsBlockLocationsResponseProto::volumeids(int index) const {
  return volumeids_.Get(index);
}
inline ::std::string* GetHdfsBlockLocationsResponseProto::mutable_volumeids(int index) {
  return volumeids_.Mutable(index);
}
inline void GetHdfsBlockLocationsResponseProto::set_volumeids(int index, const ::std::string& value) {
  volumeids_.Mutable(index)->assign(value);
}
inline void GetHdfsBlockLocationsResponseProto::set_volumeids(int index, const char* value) {
  volumeids_.Mutable(index)->assign(value);
}
inline void GetHdfsBlockLocationsResponseProto::set_volumeids(int index, const void* value, size_t size) {
  volumeids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetHdfsBlockLocationsResponseProto::add_volumeids() {
  return volumeids_.Add();
}
inline void GetHdfsBlockLocationsResponseProto::add_volumeids(const ::std::string& value) {
  volumeids_.Add()->assign(value);
}
inline void GetHdfsBlockLocationsResponseProto::add_volumeids(const char* value) {
  volumeids_.Add()->assign(value);
}
inline void GetHdfsBlockLocationsResponseProto::add_volumeids(const void* value, size_t size) {
  volumeids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetHdfsBlockLocationsResponseProto::volumeids() const {
  return volumeids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetHdfsBlockLocationsResponseProto::mutable_volumeids() {
  return &volumeids_;
}

// repeated uint32 volumeIndexes = 2;
inline int GetHdfsBlockLocationsResponseProto::volumeindexes_size() const {
  return volumeindexes_.size();
}
inline void GetHdfsBlockLocationsResponseProto::clear_volumeindexes() {
  volumeindexes_.Clear();
}
inline ::google::protobuf::uint32 GetHdfsBlockLocationsResponseProto::volumeindexes(int index) const {
  return volumeindexes_.Get(index);
}
inline void GetHdfsBlockLocationsResponseProto::set_volumeindexes(int index, ::google::protobuf::uint32 value) {
  volumeindexes_.Set(index, value);
}
inline void GetHdfsBlockLocationsResponseProto::add_volumeindexes(::google::protobuf::uint32 value) {
  volumeindexes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetHdfsBlockLocationsResponseProto::volumeindexes() const {
  return volumeindexes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetHdfsBlockLocationsResponseProto::mutable_volumeindexes() {
  return &volumeindexes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Hdfs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientDatanodeProtocol_2eproto__INCLUDED
